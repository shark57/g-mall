spring:
  rabbitmq:
    host: 82.157.62.146
    listener:
      concurrency: 10
      max-concurrency: 20
      prefetch: 5
    username: admin
    password: wq123321
    port: 5672
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/gl_mall_oms?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
      username: root
      password: Shark@123
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      #Oracle需要打开注释
      #validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        #login-username: admin
        #login-password: admin
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
  cloud:
    nacos:
      discovery:
#        server-addr: 82.157.62.146:8848
        server-addr: 127.0.0.1:8848
    sentinel:
      transport:
#        clientIp: 82.157.62.146
        dashboard: 127.0.0.1:8868
        port: 8719
      scg:
        fallback:
          mode: response
          response-body: '{"code":403,"msg":"请求过于频繁，请稍后再试"}'
      datasource:
        degrade:
          nacos:
            server-addr: 82.157.62.146:8848
            dataId: ${spring.application.name}-degrade-rule
            groupId: SENTINEL_GROUP
            rule-type: DEGRADE
            namespace: gmall-sentinel-config
        flow:
          nacos:
            server-addr: 82.157.62.146:8848
            dataId: ${spring.application.name}-flow-rules
            groupId: SENTINEL_GROUP
            rule-type: FLOW
            namespace: gmall-sentinel-config
        param_flow:
          nacos:
            server-addr: 82.157.62.146:8848
            dataId: ${spring.application.name}-param-rules
            groupId: SENTINEL_GROUP
            rule-type: param_flow
            namespace: gmall-sentinel-config
seata:
  enabled: true
  application-id: ${spring.application.name}
  # 事务群组（可以每个应用独立取名，也可以使用相同的名字），要与服务端nacos-config.txt中service.vgroup_mapping的后缀对应
  tx-service-group: ${spring.application.name}-tx-group
  config:
    type: nacos
    # 需要和server在同一个注册中心下
    nacos:
      namespace: seata-space
      serverAddr: 127.0.0.1:8848
      # 需要server端(registry和config)、nacos配置client端(registry和config)保持一致
      group: SEATA_GROUP
      username: "nacos"
      password: "nacos"
  registry:
    type: nacos
    nacos:
      # 需要和server端保持一致，即server在nacos中的名称，默认为seata-server
      application: seata-server
      server-addr: 127.0.0.1:8848
      group: SEATA_GROUP
      namespace: seata-space
      username: "nacos"
      password: "nacos"


#开启feign对sentinel的支持
feign:
  sentinel:
    enabled: true
##多数据源的配置
#dynamic:
#  datasource:
#    slave1:
#      driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
#      url: jdbc:sqlserver://localhost:1433;DatabaseName=renren_security
#      username: sa
#      password: 123456
#    slave2:
#      driver-class-name: org.postgresql.Driver
#      url: jdbc:postgresql://localhost:5432/renren_security
#      username: renren
#      password: 123456